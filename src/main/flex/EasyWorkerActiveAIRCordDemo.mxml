<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="app_creationComplete_handler(event)">

    <fx:Script>
        <![CDATA[
            import com.doublefx.as3.thread.Thread;
            import com.doublefx.as3.thread.event.ThreadResultEvent;
            import com.riadvice.activeaircord.Configuration;
            import com.riadvice.activeaircord.Model;

            import mx.events.FlexEvent;

            import conf.DBConf;

            import models.Employee;

            import workers.GetEmployeesWorker;

            private var thread : Thread

            private function app_creationComplete_handler( event : FlexEvent ) : void
            {
                Configuration.presistencePackage = "models";
                // Use this key to decrypt the database
                Configuration.setEncryptionKeyFor(DBConf.CONNECTION_EMPLOYEES, DBConf.getEnryptionKey());
                Configuration.connections = {"employees": "sqlite://sqlite/employees.db?mode=read"}
            }

            protected function buttonEmployeesApp_clickHandler( event : MouseEvent ) : void
            {
                var employees : * = Employee[Model.FIND_BY_SQL]("SELECT FirstName, LastName FROM Employees GROUP BY EmployeeID");
                resultArea.text = "";
                for each (var employee : * in employees)
                {
                    resultArea.appendText(employee["FirstName"] + " " + employee["LastName"] + "\n");
                }
            }

            protected function buttonEmployeesThread_clickHandler( event : MouseEvent ) : void
            {
                thread = new Thread(GetEmployeesWorker, "GetEmployeesWorker");
                thread.addEventListener(ThreadResultEvent.RESULT, onDbWorkerReady);
                thread.start();
            }

            private function onDbWorkerReady( event : Event = null ) : void
            {
                trace(event);
                thread.terminate();
            }
        ]]>
    </fx:Script>

    <s:VGroup>
        <s:Button id="buttonEmployeesApp" label="Get All Employees Application Level"
                  click="buttonEmployeesApp_clickHandler(event)"/>
        <s:Button id="buttonEmployeesThread" label="Get All Employees Using A Thread"
                  click="buttonEmployeesThread_clickHandler(event)"/>

        <s:TextArea id="resultArea"/>
    </s:VGroup>

</s:WindowedApplication>
